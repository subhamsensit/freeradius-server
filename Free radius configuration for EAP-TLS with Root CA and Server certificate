Free radius installation and EAP-TLS ,PEAP –Mschapv2 with freeradius Root CA with Android supplicant.
Author:-
Subham Sen
Content of this doc
1.	Download and Install freeradius
2.	Configure Freeradius to use PEAP-MSCHAPV2,EAP-TLS
3.	Configure ap to use radius server. Configuring nas ip (ap or controller ip)
4.	Adding user in freeradius server database
5.	Create CA and Server certificate
6.	Creating client certificate
7.	Installing CA certificate and client certificate in Android  


1.	Download and install freeradius
•	Install freeradius in Ubuntu
Sudo apt-get install Freeradius*

Check the freeradius version by below command
Freeradius –v


8.	Configure Freeradius to use PEAP-MSCHAPV2,EAP-TLS

All the configuration files are under below location for freeradius
/etc/freeradius
•	Configure eap.conf file and configure default_eap_type as peap
           Issue  Nano eap.conf and then change below line inside eap.conf
              eap {
	        default_eap_type = peap
             uncomment fragment size
              fragment_size = 1024
•	Below changes will configure peap to use Mschapv2 as inner authentication

nano modules/mschap

Uncomment below lines and enable them by below
use_mppe = yes
require_encryption = yes
require_strong = yes
with_ntdomain_hack = yes

save the changes
•	Configuring nas ip (ap or controller’s ip according  to need).Configure ip according to your network.
Nano /etc/freeradius/clients.conf
client 10.110.0.0/16 {
        secret        = sitindia123     #  aaa policy shared secret as in ap or controller.
        shortname     = clientevaluation-test
}

•	Add user to radius db which will be used for radius authentication
Nano /etc/freeradius/users

"sitindia1"     Cleartext-Password := "sitindia123"
                Reply-Message = "Hello, %{User-Name}"

"client1"       Cleartext-Password := "sitindia123"
                Reply-Message = "Hello, %{User-Name}"


"sitindia"      Cleartext-Password := "sitindia123"
                Reply-Message = "Hello, %{User-Name}"

•	Now start the radius server in debug mode

sudo service freeradius stop
sudo freeradius -XXX

bellow log should be seen

ebug: }
Wed Nov  2 14:54:23 2016 : Debug:  ... adding new socket proxy address * port 46657
Wed Nov  2 14:54:23 2016 : Debug: Listening on authentication address * port 1812
Wed Nov  2 14:54:23 2016 : Debug: Listening on accounting address * port 1813
Wed Nov  2 14:54:23 2016 : Debug: Listening on authentication address 127.0.0.1 port 18120 as server inner-tunnel
Wed Nov  2 14:54:23 2016 : Debug: Listening on proxy address * port 1814
Wed Nov  2 14:54:23 2016 : Info: Ready to process requests.



•	To check radius is listening on 1812 port ,check netstat
Netstat –listening
Below process should be seen
root@subham-VirtualBox:/var/log/freeradius# netstat --listening
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
udp        0      0 *:radius                *:*                                
udp        0      0 *:radius-acct           *:*                                
udp        0      0 *:1814                  *:*   



•	Now let’s test whether radius service is working fine or not with radtest tool.

radtest sitindia1 sitindia123 localhost 0  testing123
          (radius user) (password)  (radius ip )  (cleartext) (shared secret tsting123 for localhost)

root@subham-VirtualBox:/etc/freeradius# radtest sitindia1 sitindia123 localhost 0 testing123
Sending Access-Request of id 53 to 127.0.0.1 port 1812
	User-Name = "sitindia1"
	User-Password = "sitindia123"
	NAS-IP-Address = 127.0.1.1
	NAS-Port = 0
	Message-Authenticator = 0x00000000000000000000000000000000
rad_recv: Access-Accept packet from host 127.0.0.1 port 1812, id=53, length=38
	Reply-Message = "Hello, sitindia1"
root@subham-VirtualBox:/etc/freeradius#

•	Configure radius server ip in ap by UI or cli
•	Create Ca ,server certificate and client certificate
We will create server certificate, ca certificate and client certificate for PEAP-Mschapv2 and EAP-TLS. Below is the significance of each certificate


Root CA- This is highest in the hierarchy of public key infrastructure. Server certificate and client certificate have to be signed by this certificate to build trust.

Server certificate- This certificate will be used by free radius server to form TLS tunnel. This certificate has to be signed by the same Root Ca certificate which is to be trusted and installed in client.

Client certificate- This certificate is only needed for EAP-TLS authentication. This has to be signed by the same CA certificate which radius server trusts.

•	CA,server and client certificates will be generated by openssl.
Take backup of openssl.cnf file to avoid any misconfiguration related issue

cp /etc/ssl/openssl.cnf  /etc/ssl/openssl_backup.cnf

Now lets change some settings in openssl.cnf file.We need to change the directory location #where everything is kept

nano /etc/ssl/openssl.cnf  

go to dir variable and set below value

dir = /etc/freeradius/eap/eapCA     ## In  this location we will store our CA                       certificates and its private keys
and from this location openssl will take certificate and sign other certificates

•	Now we need to set values for the certificates elements which this ca will generate
nano /etc/ssl/openssl.cnf  

countryName			= Country Name (2 letter code)
countryName_default		= IN
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= Karnataka

localityName			= Bangalore (eg, city)

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= Internet Widgits Pty Ltd

# we can do this but it is not needed normally :-)
#1.organizationName		= Second Organization Name (eg, company)
#1.organizationName_default	= World Wide Web Pty Ltd

organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= Cambium

commonName			= sitindia1 (e.g. server FQDN or YOUR name)
## Provide the common name as the user you have in radius db such sitindia1
commonName_max			= 64

emailAddress			= subham.sen@cambiumnetworks.com
emailAddress_max		= 64

# SET-ex3			= SET extension number 3

[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min		= 4
challengePassword_max		= 20

unstructuredName		= An optional company name



             
•	Now need to create a folder inside freeradius folder where we will keep all our certificates
mkdir /etc/freeradius/eap

1.	Now need to use openssl scrips to generate ca certificate
2.	navigate to eap folder under freeradius
3.	cd /etc/freeradius/eap
4.	copy ca.pl script which simplifies openssl certificate operations
5.	cp /usr/lib/ssl/misc/CA.pl .     (it will copy the script into eap folder)
6.	Now need to configure inside CA.pl script regarding which location ca certificate will be generated and stored
nano CA.pl
$CATOP="/etc/freeradius/eap/eapCA"; ## This is the location where CA certificate will be generated and stored
7.	Generation of CA certificate
./CA.pl –newca
provide a password the same password will be asked when you create server certificate and sign it.

Use default values for the certificate of there is no default value set for an element then provide it.
(keep a common passphrase whenever is asked )

Now ca certificate is generated inside eapCA folder.
check the content under eapCA
cd /eapCA
ls –lrt

root@subham-VirtualBox:/etc/freeradius/eap/eapCA# ls -lrt
total 56
-rw-r--r-- 1 root freerad    3 Oct 26 19:04 crlnumber
drwxr-sr-x 2 root freerad 4096 Oct 26 19:04 crl
drwxr-sr-x 2 root freerad 4096 Oct 26 19:04 certs
drwxr-sr-x 2 root freerad 4096 Oct 26 19:04 private
-rw-r--r-- 1 root freerad 1025 Oct 26 19:05 careq.pem
-rw-r--r-- 1 root freerad 4479 Oct 26 19:05 cacert.pem
-rw-r--r-- 1 root freerad   17 Oct 27 20:10 serial.old
-rw-r--r-- 1 root freerad  409 Oct 27 20:10 index.txt.old
-rw-r--r-- 1 root freerad   21 Oct 27 20:10 index.txt.attr.old
-rw-r--r-- 1 root freerad   17 Oct 27 20:25 serial
-rw-r--r-- 1 root freerad   21 Oct 27 20:25 index.txt.attr
-rw-r--r-- 1 root freerad  504 Oct 27 20:25 index.txt
drwxr-sr-x 2 root freerad 4096 Oct 27 20:25 newcerts

cacert.pem is the ca certificate which will be used by both server(freeradius)
       and clients.
•	Now let’s generate server certificate which will be used by freeradius.
cd /etc/freeradius/eap
There are two steps to generate server certificate
1.	generate certificate request
./CA.pl  –newreq-nodes
               Provide certificate variable values. keep common name as Freeradius.
           Give same password you used while generating CA certificate in above step.
          This step will generate certificate request file and private key.
             root@subham-VirtualBox:/etc/freeradius/eap# ls -lrt
total 48
-rwxr-xr-x 1 root freerad 5892 Oct 26 18:58 CA.pl
-rw-r----- 1 root freerad  985 Oct 26 19:17 newreq.pem
-rw-r----- 1 root freerad 1708 Oct 26 19:17 newkey.pem
             
2.	Now need to sign this certificate request to create server certificate. This certificate will be used by freeradius
./CA.pl –sign
use the same passphrase that you used earlier.
Note. (keep same passphrase for all certificate operation to avoid any confusion)

now check the certificate  generated
ls -lrt
root@subham-VirtualBox:/etc/freeradius/eap# ls -lrt
total 48
-rwxr-xr-x 1 root freerad 5892 Oct 26 18:58 CA.pl
-rw-r----- 1 root freerad  985 Oct 26 19:17 newreq.pem
-rw-r----- 1 root freerad 1708 Oct 26 19:17 newkey.pem
-rw-r----- 1 root freerad 4551 Oct 26 19:19 newcert.pem
The highlighted certificate is the server certificate which will be used by freeradius.
•	Now freeradius has to use the server certificate and ca certificate that were generated in above steps. For this we need two more files to be generated and those are
random and dh.

1.	To generate dh file use below commands
cd /etc/freeradius/eap
openssl dhparam -check -text -5 512 -out dh

2.	To generate dd file us below commands
dd if=/dev/urandom of=random count=2
                     Issue ls -lrt in /etc/freeradius/eap and check whether files are created or not.

•	Now need to configure free radius to use the server certificate and CA certificate which were created above.
From /etc/freeradius/eap folder issue below commands
chmod 640 random newcert.pem newkey.pem newreq.pem dh
Now go to /etc/freeradius folder and configure eap.conf file to use the new CA .Server certificate ,dh and random files
nano /etc/freeradius/eap.conf
# We need to change the private key file
 go to tls section inside eap.conf file
•	tls {
#  These is used to simplify later configurations.
 #

 private_key_file = /etc/freeradius/eap/newkey.pem # using the user created private key
certificate_file = /etc/freeradius/eap/newcert.pem   # This is the server certificat that we             						created
CA_file = /etc/freeradius/eap/eapCA/cacert.pem 	#This is the CA certificate that we created
Now we need the dh and random that we created before.

dh_file = /etc/freeradius/eap/dh
random_file = /etc/freeradius/eap/random
               save the file
•	Now restart the freeradius server
sudo service freeradius stop
sudo freeradius -XXX
check in the netstat whether the service is listening
              nestat –listening
•	Now freeradius is configured and running so now configure the freerasius server ip in the controller or ap as nas client.
•	Creating client certificate
     Now we need to create client certificat for EAP-TLS authentication.
     Note . Only in EAP- TLS clients are authorized by its client certificate for rest of the authentications password is required client certificate is not mandatory.But for every authentication CA certificate installation on client and radius server is mandatory.
 Steps to create client certificate
1.	Create a folder inside /etc/freeradius/eap.
 mkdir /etc/freeradius/eap/client_certificates  # In this locations all client certificates will be   						stored
2.	copy CA.pl in this folder
cp /etc/freeradius/CA.pl .  (This will copy the file in the present folder)

3.	Now create a certificate request
./CA.pl  –newreq-nodes
This will create certificate request and private key
4.	Now we need to create a pkcs12 certificate which contains clientcertificate,private key and CA certificate.
./CA.pl -sign -pkcs12
provide a common passphrase .(This will be required while installing the certificate)
5.	Issue ls -lrt in this folder and check for the files
You should see below files inside the folder
root@subham-VirtualBox:/etc/freeradius/eap/client_certificates# ls -lrt
total 40
-rwxr-xr-x 1 root freerad 5892 Oct 26 20:37 CA.pl
-rw-r--r-- 1 root freerad 4546 Oct 27 20:25 newcert.pem
-rw-r--r-- 1 root freerad 1834 Nov  3 10:44 newkey.pem
-rw-r--r-- 1 root freerad  976 Nov  3 10:44 newreq.pem
-rw-r--r-- 1 root freerad    0 Nov  3 10:45 newcert.p12
6.	Now copy this newcert.p12 and also the CA certificate cacert.pem from /etc/freeradius/eap/eapCA
 to a pen drive or export to any convenient media
•	Installing client certificate and CA certificate in Android
Android supports .cer and pfx or p12 file formats. So we need to change the file format from pem to cer.
1.	openssl x509 -outform der -in cacert.pem -out cacert.der
2.	Once the file in .der format . Open the certificate in windows
Then go to Details-> Copy to File -> select .cer format and save it
3.	now copy this cacert.cer and newcert.p12 file into sd card of Android
Now installing the certificates in Android
=========================================
Follow the below screenshots.

From sd card location choose the cacert.cer
and also install the nercert.p12 file
Configure the wlan as below screenshot

Choose the right client certificate and CA certificate from the drop down list.
This is the complete flow  of freeradius installation and configuring dot1 in Android.

Some useful openssl commands related to cetificate

Checking Using OpenSSL
If you need to check the information within a Certificate, CSR or Private Key, use these commands. You can also check CSRs and check certificates using our online tools.
•	Check a Certificate Signing Request (CSR)
openssl req -text -noout -verify -in CSR.csr
•	Check a private key
openssl rsa -in privateKey.key -check
•	Check a certificate
openssl x509 -in certificate.crt -text -noout
•	Check a PKCS#12 file (.pfx or .p12)
openssl pkcs12 -info -in keyStore.p12
Converting Using OpenSSL
These commands allow you to convert certificates and keys to different formats to make them compatible with specific types of servers or software. For example, you can convert a normal PEM file that would work with Apache to a PFX (PKCS#12) file and use it with Tomcat or IIS. Use our SSL Converter to convert certificates without messing with OpenSSL.
•	Convert a DER file (.crt .cer .der) to PEM
openssl x509 -inform der -in certificate.cer -out certificate.pem
•	Convert a PEM file to DER
openssl x509 -outform der -in certificate.pem -out certificate.der
•	Convert a PKCS#12 file (.pfx .p12) containing a private key and certificates to PEM
openssl pkcs12 -in keyStore.pfx -out keyStore.pem -nodes
You can add -nocerts to only output the private key or add -nokeys to only output the certificates.
•	Convert a PEM certificate file and a private key to PKCS#12 (.pfx .p12)
openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -certfile CACert.crt
============================END=====================================
